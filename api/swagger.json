{
    "swagger": "2.0",
    "info": {
        "description": "API for managing user segments.",
        "title": "User Segmentation API",
        "contact": {
            "name": "DigiRon's Team",
            "url": "https://github.com/DigiRon4ik",
            "email": "dr.digiron@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "paths": {
        "/segments": {
            "get": {
                "description": "Get all segments from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segments"
                ],
                "summary": "Get All segments",
                "responses": {
                    "200": {
                        "description": "An array of segments was obtained",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SegmentResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a segment in the database and returns the instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segments"
                ],
                "summary": "Add segment",
                "parameters": [
                    {
                        "description": "Information about the segment to be added",
                        "name": "Segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SegmentCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The segment has been successfully established",
                        "schema": {
                            "$ref": "#/definitions/dto.SegmentResponse"
                        }
                    }
                }
            }
        },
        "/segments/{slug}": {
            "get": {
                "description": "Get segment by slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segments"
                ],
                "summary": "Get segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Segment slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A segment with such a slogan was obtained",
                        "schema": {
                            "$ref": "#/definitions/dto.SegmentResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a segment in the database and returns an instance of it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segments"
                ],
                "summary": "Update segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Segment slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Segment change information",
                        "name": "Segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SegmentUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The segment with this slogan has been changed",
                        "schema": {
                            "$ref": "#/definitions/dto.SegmentResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a segment from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segments"
                ],
                "summary": "Delete segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Segment slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The segment with this slug has been successfully deleted"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get all users from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get All users",
                "responses": {
                    "200": {
                        "description": "An array of users was obtained",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.UserResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a user in the database and returns an instance of the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Add a user",
                "parameters": [
                    {
                        "description": "Information about the added user",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The user was successfully created",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A user with this id was received",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the user in the database and returns an instance of the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User change information",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A user with this id has been changed",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The user with this id was successfully deleted"
                    }
                }
            }
        },
        "/users/{id}/segments": {
            "get": {
                "description": "Gets the active user segments by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-segments"
                ],
                "summary": "Get active user segments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array with active user segments received",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SegmentResponse"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the user in the database and returns an instance of the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-segments"
                ],
                "summary": "Update user segments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User change information",
                        "name": "Segments",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SegmentsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User segments have been successfully changed"
                    }
                }
            }
        },
        "/users/{id}/segments/history": {
            "get": {
                "description": "Updates the user in the database and returns an instance of the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-segments-history"
                ],
                "summary": "Update user segments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Year, e.g. 2025",
                        "name": "year",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Month, e.g. 02",
                        "name": "month",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CSV-history is ready at the link",
                        "schema": {
                            "$ref": "#/definitions/dto.USHResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.SegmentModification": {
            "type": "object",
            "properties": {
                "expiration_time": {
                    "description": "required: false",
                    "type": "string"
                },
                "slug": {
                    "description": "required: true",
                    "type": "string"
                }
            }
        },
        "dto.SegmentCreateRequest": {
            "description": "Segment information at creation",
            "type": "object",
            "properties": {
                "description": {
                    "description": "required: false",
                    "type": "string"
                },
                "slug": {
                    "description": "required: true",
                    "type": "string"
                }
            }
        },
        "dto.SegmentResponse": {
            "description": "Segment information when creating/updating a segment",
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "read only: true",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "read only: true",
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "dto.SegmentUpdateRequest": {
            "description": "Segment information when updating",
            "type": "object",
            "properties": {
                "description": {
                    "description": "required: true",
                    "type": "string"
                }
            }
        },
        "dto.USHResponse": {
            "description": "History information",
            "type": "object",
            "properties": {
                "url": {
                    "description": "required: true",
                    "type": "string"
                }
            }
        },
        "dto.UserCreateRequest": {
            "description": "User information on creation",
            "type": "object",
            "properties": {
                "name": {
                    "description": "required: true",
                    "type": "string"
                }
            }
        },
        "dto.UserResponse": {
            "description": "User information at creation/update",
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "read only: true",
                    "type": "string"
                },
                "id": {
                    "description": "read only: true",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UserUpdateRequest": {
            "description": "User information when updating",
            "type": "object",
            "properties": {
                "name": {
                    "description": "required: true",
                    "type": "string"
                }
            }
        },
        "handlers.SegmentsRequest": {
            "description": "Segment lists for adding and deleting segments",
            "type": "object",
            "properties": {
                "add": {
                    "description": "required: false",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.SegmentModification"
                    }
                },
                "remove": {
                    "description": "required: false",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}